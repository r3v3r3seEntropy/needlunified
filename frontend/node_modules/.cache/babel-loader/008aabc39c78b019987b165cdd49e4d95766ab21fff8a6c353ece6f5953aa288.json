{"ast":null,"code":"var _jsxFileName = \"/Users/aritradas/Downloads/needlunified/frontend/src/components/NeedlText.jsx\",\n  _s = $RefreshSig$();\n// src/components/NeedlText.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NeedlText() {\n  _s();\n  // States\n  const [askedCategories, setAskedCategories] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [chiefComplaint, setChiefComplaint] = useState('');\n  const [context, setContext] = useState('');\n  const [currentCategory, setCurrentCategory] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const [nextQuestion, setNextQuestion] = useState(null);\n  const [questionType, setQuestionType] = useState('text');\n  const [questionOptions, setQuestionOptions] = useState([]);\n  const [questionConditionals, setQuestionConditionals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [inPart2, setInPart2] = useState(false);\n  const [answerInput, setAnswerInput] = useState('');\n\n  // On Mount, fetch categories\n  useEffect(() => {\n    getCategories();\n  }, []);\n  const getCategories = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get('http://localhost:5000/get_categories');\n      setCategories(res.data.categories.filter(cat => cat !== 'part2'));\n    } catch (err) {\n      console.error('Error fetching categories:', err);\n      alert('Error fetching categories. See console.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePredictCategory = async () => {\n    if (!chiefComplaint.trim()) {\n      alert('Please enter a chief complaint.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/predict_category', {\n        complaint: chiefComplaint\n      });\n      const predictedCategory = res.data.category;\n      if (predictedCategory) {\n        if (!askedCategories.includes(predictedCategory)) {\n          setAskedCategories([...askedCategories, predictedCategory]);\n        }\n        const updatedContext = `Chief complaint: ${chiefComplaint}. `;\n        setContext(updatedContext);\n        setCurrentCategory(predictedCategory);\n        // ask questions\n        askQuestions(predictedCategory, updatedContext);\n      } else {\n        // fallback\n        if (categories.length > 0) {\n          setCurrentCategory(categories[0]);\n          askQuestions(categories[0], `Chief complaint: ${chiefComplaint}. `);\n        } else {\n          alert('No categories found, cannot proceed.');\n        }\n      }\n    } catch (err) {\n      console.error('Error predicting category:', err);\n      alert('Error predicting category. See console.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const askQuestions = async (cat, ctx) => {\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/ask_questions', {\n        category: cat,\n        context: ctx\n      });\n      if (res.data.next_question) {\n        setNextQuestion(res.data.next_question);\n        setCurrentQuestion(res.data.next_question);\n        setQuestionType(res.data.type || 'text');\n        setQuestionOptions(res.data.options || []);\n        setQuestionConditionals(res.data.conditionals || []);\n      } else {\n        // no question -> done or skip\n        setNextQuestion(null);\n        setCurrentQuestion('');\n        setQuestionType('text');\n        setQuestionOptions([]);\n        setQuestionConditionals([]);\n      }\n    } catch (err) {\n      console.error('Error in ask_questions:', err);\n      alert('Error in ask_questions. See console.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmitAnswer = async answer => {\n    if (!currentQuestion) return;\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/submit_answer', {\n        answer: answer || 'Skipped',\n        category: currentCategory,\n        context,\n        current_question: currentQuestion,\n        asked_categories: askedCategories\n      });\n      setContext(res.data.context || context);\n      setCurrentCategory(res.data.category || currentCategory);\n      setAskedCategories(res.data.asked_categories || askedCategories);\n      if (res.data.next_question) {\n        setNextQuestion(res.data.next_question);\n        setCurrentQuestion(res.data.next_question);\n        setQuestionType(res.data.type || 'text');\n        setQuestionOptions(res.data.options || []);\n        setQuestionConditionals(res.data.conditionals || []);\n      } else if (res.data.category) {\n        // continue same category\n        askQuestions(res.data.category, res.data.context || context);\n      } else {\n        // maybe done\n        setNextQuestion(null);\n        setCurrentQuestion('');\n        setQuestionType('text');\n        setQuestionOptions([]);\n        setQuestionConditionals([]);\n      }\n    } catch (err) {\n      console.error('Error submitting answer:', err);\n      alert('Error submitting answer. See console.');\n    } finally {\n      setLoading(false);\n      setAnswerInput('');\n    }\n  };\n  const handleSkipQuestion = () => {\n    handleSubmitAnswer('Skipped');\n  };\n  const handleSkipCategory = async () => {\n    // mark current category as asked\n    if (currentCategory && !askedCategories.includes(currentCategory)) {\n      setAskedCategories([...askedCategories, currentCategory]);\n    }\n    // fetch next category from backend\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/predict_next_category', {\n        context,\n        asked_categories: askedCategories\n      });\n      const predicted = res.data.category;\n      if (predicted && !askedCategories.includes(predicted)) {\n        setCurrentCategory(predicted);\n        // ask new category\n        askQuestions(predicted, context);\n      } else {\n        // no predicted => move to part2 or done\n        if (!inPart2) {\n          setInPart2(true);\n          setCurrentCategory('part2');\n          askQuestions('part2', context);\n        } else {\n          // done\n          setNextQuestion(null);\n          setCurrentQuestion('');\n          setQuestionType('text');\n          setQuestionOptions([]);\n          setQuestionConditionals([]);\n        }\n      }\n    } catch (err) {\n      console.error('Error skipping category:', err);\n      alert('Error skipping category. See console.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGenerateSummary = async () => {\n    if (!context) {\n      alert('No context to summarize.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/generate_summary', {\n        context\n      });\n      if (res.data.success) {\n        alert('Generated Summary:\\n\\n' + res.data.summary);\n      } else {\n        alert('Error generating summary: ' + (res.data.error || 'Unknown'));\n      }\n    } catch (err) {\n      console.error('Error generating summary:', err);\n      alert('Error generating summary. See console.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Needl Text (Medical Q&A)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), !currentCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chiefComplaintBox,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Chief Complaint:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: chiefComplaint,\n        onChange: e => setChiefComplaint(e.target.value),\n        style: styles.input,\n        placeholder: \"Enter chief complaint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.btn,\n        onClick: handlePredictCategory,\n        disabled: loading,\n        children: loading ? 'Predicting...' : 'Predict Category'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.questionContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question: \", currentQuestion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), questionType === 'text' && questionOptions.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.answerBox,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: answerInput,\n          onChange: e => setAnswerInput(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              handleSubmitAnswer(answerInput);\n            }\n          },\n          placeholder: \"Type your answer here...\",\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.btn,\n          onClick: () => handleSubmitAnswer(answerInput),\n          disabled: loading,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this), questionOptions && questionOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.optionsContainer,\n        children: questionOptions.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.optionButton,\n          disabled: loading,\n          onClick: () => handleSubmitAnswer(opt),\n          children: opt\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.skipContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.skipButton,\n          onClick: handleSkipQuestion,\n          disabled: loading,\n          children: \"Skip Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.skipButton,\n          onClick: handleSkipCategory,\n          disabled: loading,\n          children: \"Skip Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), !currentQuestion && currentCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.summaryContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No more questions for this category (or you skipped). Generate summary or skip to next steps.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.btn,\n        onClick: handleGenerateSummary,\n        disabled: loading,\n        children: \"Generate Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.debugBox,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Context (Debug View)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: styles.debugPre,\n        children: context\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n\n// Styles\n_s(NeedlText, \"zsQHy1YQ9s1r2LX79U3bYbnF74o=\");\n_c = NeedlText;\nconst styles = {\n  container: {\n    padding: '20px',\n    fontFamily: 'sans-serif'\n  },\n  chiefComplaintBox: {\n    marginBottom: '20px'\n  },\n  input: {\n    padding: '8px',\n    marginLeft: '10px',\n    marginRight: '10px',\n    border: '1px solid #ccc',\n    borderRadius: '4px'\n  },\n  btn: {\n    padding: '8px 16px',\n    background: '#007bff',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '6px',\n    cursor: 'pointer'\n  },\n  questionContainer: {\n    marginTop: '20px',\n    padding: '20px',\n    background: '#f9f9f9',\n    borderRadius: '8px'\n  },\n  answerBox: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '10px'\n  },\n  optionsContainer: {\n    marginTop: '10px',\n    display: 'flex',\n    gap: '8px',\n    flexWrap: 'wrap'\n  },\n  optionButton: {\n    padding: '6px 12px',\n    borderRadius: '4px',\n    border: '1px solid #007bff',\n    background: '#fff',\n    cursor: 'pointer'\n  },\n  skipContainer: {\n    marginTop: '20px',\n    display: 'flex',\n    gap: '10px'\n  },\n  skipButton: {\n    padding: '8px 16px',\n    background: '#dc3545',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '6px',\n    cursor: 'pointer'\n  },\n  summaryContainer: {\n    marginTop: '20px',\n    background: '#f9f9f9',\n    padding: '20px',\n    borderRadius: '8px'\n  },\n  debugBox: {\n    marginTop: '30px',\n    padding: '20px',\n    background: '#ececec',\n    borderRadius: '8px'\n  },\n  debugPre: {\n    maxHeight: '300px',\n    overflowY: 'auto',\n    background: '#fff',\n    padding: '10px'\n  }\n};\nexport default NeedlText;\nvar _c;\n$RefreshReg$(_c, \"NeedlText\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","NeedlText","_s","askedCategories","setAskedCategories","categories","setCategories","chiefComplaint","setChiefComplaint","context","setContext","currentCategory","setCurrentCategory","currentQuestion","setCurrentQuestion","nextQuestion","setNextQuestion","questionType","setQuestionType","questionOptions","setQuestionOptions","questionConditionals","setQuestionConditionals","loading","setLoading","inPart2","setInPart2","answerInput","setAnswerInput","getCategories","res","get","data","filter","cat","err","console","error","alert","handlePredictCategory","trim","post","complaint","predictedCategory","category","includes","updatedContext","askQuestions","length","ctx","next_question","type","options","conditionals","handleSubmitAnswer","answer","current_question","asked_categories","handleSkipQuestion","handleSkipCategory","predicted","handleGenerateSummary","success","summary","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","chiefComplaintBox","value","onChange","e","target","input","placeholder","btn","onClick","disabled","questionContainer","answerBox","onKeyDown","key","optionsContainer","map","opt","idx","optionButton","skipContainer","skipButton","summaryContainer","debugBox","debugPre","_c","padding","fontFamily","marginBottom","marginLeft","marginRight","border","borderRadius","background","color","cursor","marginTop","display","alignItems","gap","flexWrap","maxHeight","overflowY","$RefreshReg$"],"sources":["/Users/aritradas/Downloads/needlunified/frontend/src/components/NeedlText.jsx"],"sourcesContent":["// src/components/NeedlText.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction NeedlText() {\n  // States\n  const [askedCategories, setAskedCategories] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [chiefComplaint, setChiefComplaint] = useState('');\n  const [context, setContext] = useState('');\n  const [currentCategory, setCurrentCategory] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const [nextQuestion, setNextQuestion] = useState(null);\n  const [questionType, setQuestionType] = useState('text');\n  const [questionOptions, setQuestionOptions] = useState([]);\n  const [questionConditionals, setQuestionConditionals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [inPart2, setInPart2] = useState(false);\n  const [answerInput, setAnswerInput] = useState('');\n\n  // On Mount, fetch categories\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  const getCategories = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get('http://localhost:5000/get_categories');\n      setCategories(res.data.categories.filter(cat => cat !== 'part2'));\n    } catch (err) {\n      console.error('Error fetching categories:', err);\n      alert('Error fetching categories. See console.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePredictCategory = async () => {\n    if (!chiefComplaint.trim()) {\n      alert('Please enter a chief complaint.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/predict_category', {\n        complaint: chiefComplaint\n      });\n      const predictedCategory = res.data.category;\n      if (predictedCategory) {\n        if (!askedCategories.includes(predictedCategory)) {\n          setAskedCategories([...askedCategories, predictedCategory]);\n        }\n        const updatedContext = `Chief complaint: ${chiefComplaint}. `;\n        setContext(updatedContext);\n        setCurrentCategory(predictedCategory);\n        // ask questions\n        askQuestions(predictedCategory, updatedContext);\n      } else {\n        // fallback\n        if (categories.length > 0) {\n          setCurrentCategory(categories[0]);\n          askQuestions(categories[0], `Chief complaint: ${chiefComplaint}. `);\n        } else {\n          alert('No categories found, cannot proceed.');\n        }\n      }\n    } catch (err) {\n      console.error('Error predicting category:', err);\n      alert('Error predicting category. See console.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const askQuestions = async (cat, ctx) => {\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/ask_questions', {\n        category: cat,\n        context: ctx\n      });\n      if (res.data.next_question) {\n        setNextQuestion(res.data.next_question);\n        setCurrentQuestion(res.data.next_question);\n        setQuestionType(res.data.type || 'text');\n        setQuestionOptions(res.data.options || []);\n        setQuestionConditionals(res.data.conditionals || []);\n      } else {\n        // no question -> done or skip\n        setNextQuestion(null);\n        setCurrentQuestion('');\n        setQuestionType('text');\n        setQuestionOptions([]);\n        setQuestionConditionals([]);\n      }\n    } catch (err) {\n      console.error('Error in ask_questions:', err);\n      alert('Error in ask_questions. See console.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmitAnswer = async (answer) => {\n    if (!currentQuestion) return;\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/submit_answer', {\n        answer: answer || 'Skipped',\n        category: currentCategory,\n        context,\n        current_question: currentQuestion,\n        asked_categories: askedCategories\n      });\n      setContext(res.data.context || context);\n      setCurrentCategory(res.data.category || currentCategory);\n      setAskedCategories(res.data.asked_categories || askedCategories);\n\n      if (res.data.next_question) {\n        setNextQuestion(res.data.next_question);\n        setCurrentQuestion(res.data.next_question);\n        setQuestionType(res.data.type || 'text');\n        setQuestionOptions(res.data.options || []);\n        setQuestionConditionals(res.data.conditionals || []);\n      } else if (res.data.category) {\n        // continue same category\n        askQuestions(res.data.category, res.data.context || context);\n      } else {\n        // maybe done\n        setNextQuestion(null);\n        setCurrentQuestion('');\n        setQuestionType('text');\n        setQuestionOptions([]);\n        setQuestionConditionals([]);\n      }\n    } catch (err) {\n      console.error('Error submitting answer:', err);\n      alert('Error submitting answer. See console.');\n    } finally {\n      setLoading(false);\n      setAnswerInput('');\n    }\n  };\n\n  const handleSkipQuestion = () => {\n    handleSubmitAnswer('Skipped');\n  };\n\n  const handleSkipCategory = async () => {\n    // mark current category as asked\n    if (currentCategory && !askedCategories.includes(currentCategory)) {\n      setAskedCategories([...askedCategories, currentCategory]);\n    }\n    // fetch next category from backend\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/predict_next_category', {\n        context,\n        asked_categories: askedCategories\n      });\n      const predicted = res.data.category;\n      if (predicted && !askedCategories.includes(predicted)) {\n        setCurrentCategory(predicted);\n        // ask new category\n        askQuestions(predicted, context);\n      } else {\n        // no predicted => move to part2 or done\n        if (!inPart2) {\n          setInPart2(true);\n          setCurrentCategory('part2');\n          askQuestions('part2', context);\n        } else {\n          // done\n          setNextQuestion(null);\n          setCurrentQuestion('');\n          setQuestionType('text');\n          setQuestionOptions([]);\n          setQuestionConditionals([]);\n        }\n      }\n    } catch (err) {\n      console.error('Error skipping category:', err);\n      alert('Error skipping category. See console.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGenerateSummary = async () => {\n    if (!context) {\n      alert('No context to summarize.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/generate_summary', {\n        context\n      });\n      if (res.data.success) {\n        alert('Generated Summary:\\n\\n' + res.data.summary);\n      } else {\n        alert('Error generating summary: ' + (res.data.error || 'Unknown'));\n      }\n    } catch (err) {\n      console.error('Error generating summary:', err);\n      alert('Error generating summary. See console.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Render\n  return (\n    <div style={styles.container}>\n      <h2>Needl Text (Medical Q&A)</h2>\n\n      {/* If we haven't started (no currentCategory), show chief complaint input */}\n      {!currentCategory && (\n        <div style={styles.chiefComplaintBox}>\n          <label>Chief Complaint:</label>\n          <input\n            type=\"text\"\n            value={chiefComplaint}\n            onChange={(e) => setChiefComplaint(e.target.value)}\n            style={styles.input}\n            placeholder=\"Enter chief complaint\"\n          />\n          <button style={styles.btn} onClick={handlePredictCategory} disabled={loading}>\n            {loading ? 'Predicting...' : 'Predict Category'}\n          </button>\n        </div>\n      )}\n\n      {/* If there's a current question to display */}\n      {currentQuestion && (\n        <div style={styles.questionContainer}>\n          <h3>Question: {currentQuestion}</h3>\n          {questionType === 'text' && questionOptions.length === 0 && (\n            <div style={styles.answerBox}>\n              <input\n                type=\"text\"\n                value={answerInput}\n                onChange={(e) => setAnswerInput(e.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') {\n                    handleSubmitAnswer(answerInput);\n                  }\n                }}\n                placeholder=\"Type your answer here...\"\n                style={styles.input}\n              />\n              <button\n                style={styles.btn}\n                onClick={() => handleSubmitAnswer(answerInput)}\n                disabled={loading}\n              >\n                Submit\n              </button>\n            </div>\n          )}\n\n          {/* If we have multiple choice (options) */}\n          {questionOptions && questionOptions.length > 0 && (\n            <div style={styles.optionsContainer}>\n              {questionOptions.map((opt, idx) => (\n                <button\n                  key={idx}\n                  style={styles.optionButton}\n                  disabled={loading}\n                  onClick={() => handleSubmitAnswer(opt)}\n                >\n                  {opt}\n                </button>\n              ))}\n            </div>\n          )}\n\n          {/* Conditionals might require extra handling; for now, we skip advanced logic. */}\n          <div style={styles.skipContainer}>\n            <button style={styles.skipButton} onClick={handleSkipQuestion} disabled={loading}>\n              Skip Question\n            </button>\n            <button style={styles.skipButton} onClick={handleSkipCategory} disabled={loading}>\n              Skip Category\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* If no current question but we have a category => possibly done. Show \"Generate Summary.\" */}\n      {!currentQuestion && currentCategory && (\n        <div style={styles.summaryContainer}>\n          <p>No more questions for this category (or you skipped). Generate summary or skip to next steps.</p>\n          <button style={styles.btn} onClick={handleGenerateSummary} disabled={loading}>\n            Generate Summary\n          </button>\n        </div>\n      )}\n\n      {/* Debug / Context */}\n      <div style={styles.debugBox}>\n        <h4>Context (Debug View)</h4>\n        <pre style={styles.debugPre}>{context}</pre>\n      </div>\n    </div>\n  );\n}\n\n// Styles\nconst styles = {\n  container: {\n    padding: '20px',\n    fontFamily: 'sans-serif',\n  },\n  chiefComplaintBox: {\n    marginBottom: '20px',\n  },\n  input: {\n    padding: '8px',\n    marginLeft: '10px',\n    marginRight: '10px',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n  },\n  btn: {\n    padding: '8px 16px',\n    background: '#007bff',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '6px',\n    cursor: 'pointer',\n  },\n  questionContainer: {\n    marginTop: '20px',\n    padding: '20px',\n    background: '#f9f9f9',\n    borderRadius: '8px',\n  },\n  answerBox: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '10px',\n  },\n  optionsContainer: {\n    marginTop: '10px',\n    display: 'flex',\n    gap: '8px',\n    flexWrap: 'wrap',\n  },\n  optionButton: {\n    padding: '6px 12px',\n    borderRadius: '4px',\n    border: '1px solid #007bff',\n    background: '#fff',\n    cursor: 'pointer',\n  },\n  skipContainer: {\n    marginTop: '20px',\n    display: 'flex',\n    gap: '10px',\n  },\n  skipButton: {\n    padding: '8px 16px',\n    background: '#dc3545',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '6px',\n    cursor: 'pointer',\n  },\n  summaryContainer: {\n    marginTop: '20px',\n    background: '#f9f9f9',\n    padding: '20px',\n    borderRadius: '8px',\n  },\n  debugBox: {\n    marginTop: '30px',\n    padding: '20px',\n    background: '#ececec',\n    borderRadius: '8px',\n  },\n  debugPre: {\n    maxHeight: '300px',\n    overflowY: 'auto',\n    background: '#fff',\n    padding: '10px',\n  },\n};\n\nexport default NeedlText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}